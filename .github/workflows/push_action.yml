name: Push CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: androidsdk/android-30

    steps:
    - uses: actions/checkout@v3
    - name: Configurando Ambiente
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Definindo Permissao ao gradle
      run: chmod +x gradlew


    - name: Build with Gradle
      run: ./gradlew build
  tests:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: androidsdk/android-30
    steps:
    - uses: actions/checkout@v3
    - name: Configurando Ambiente
    uses: actions/setup-java@v3
    with:
      java-version: '11'
      distribution: 'temurin'
      cache: gradle

    - name: Definindo Permissao ao gradle
      run: chmod +x gradlew

    - name: Lint Test
      run: ./gradlew lintDebug

    - name: Upload html lint test Report
      uses: actions/upload-artifact@v3
      with:
        name: index.html
        path: app/build/reports/lint-results-debug.html

    - name: Ktlint Test
      run: ./gradlew lintKotlin

    - name: Detekt Test
      run: ./gradlew detekt

    - name: SonarQube
      run: ./gradlew sonarqube

    - name: Unit Test
      run: ./gradlew testDebugUnitTest

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew build sonarqube --info

    - name: Build with Gradle
      run: ./gradlew build
  apk:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Apk
        run: ./gradlew assembleDebug

      - name: Upload Apk
        uses: actions/upload-artifact@v3
        with:
          name: debug.apk
          path: app/build/outputs/**